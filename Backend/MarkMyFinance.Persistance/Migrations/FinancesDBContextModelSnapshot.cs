// <auto-generated />
using System;
using MarkMyFinance.Persistance.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MarkMyFinance.Persistance.Migrations
{
    [DbContext(typeof(FinancesDBContext))]
    partial class FinancesDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.11");

            modelBuilder.Entity("MarkMyFinance.Domain.Entities.Balance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfBudget")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("InitialBalance")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Balance");
                });

            modelBuilder.Entity("MarkMyFinance.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 9, 26, 22, 1, 29, 892, DateTimeKind.Local).AddTicks(424),
                            Name = "UNKOWN",
                            UpdatedAt = new DateTime(2023, 9, 26, 22, 1, 29, 892, DateTimeKind.Local).AddTicks(549)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 9, 26, 22, 1, 29, 892, DateTimeKind.Local).AddTicks(559),
                            Name = "Income",
                            UpdatedAt = new DateTime(2023, 9, 26, 22, 1, 29, 892, DateTimeKind.Local).AddTicks(561)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 9, 26, 22, 1, 29, 892, DateTimeKind.Local).AddTicks(564),
                            Name = "Home",
                            UpdatedAt = new DateTime(2023, 9, 26, 22, 1, 29, 892, DateTimeKind.Local).AddTicks(565)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 9, 26, 22, 1, 29, 892, DateTimeKind.Local).AddTicks(568),
                            Name = "Technology",
                            UpdatedAt = new DateTime(2023, 9, 26, 22, 1, 29, 892, DateTimeKind.Local).AddTicks(570)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 9, 26, 22, 1, 29, 892, DateTimeKind.Local).AddTicks(572),
                            Name = "Entertainment",
                            UpdatedAt = new DateTime(2023, 9, 26, 22, 1, 29, 892, DateTimeKind.Local).AddTicks(574)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2023, 9, 26, 22, 1, 29, 892, DateTimeKind.Local).AddTicks(578),
                            Name = "Utilities",
                            UpdatedAt = new DateTime(2023, 9, 26, 22, 1, 29, 892, DateTimeKind.Local).AddTicks(580)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2023, 9, 26, 22, 1, 29, 892, DateTimeKind.Local).AddTicks(582),
                            Name = "Transportation",
                            UpdatedAt = new DateTime(2023, 9, 26, 22, 1, 29, 892, DateTimeKind.Local).AddTicks(584)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2023, 9, 26, 22, 1, 29, 892, DateTimeKind.Local).AddTicks(586),
                            Name = "Pets",
                            UpdatedAt = new DateTime(2023, 9, 26, 22, 1, 29, 892, DateTimeKind.Local).AddTicks(588)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2023, 9, 26, 22, 1, 29, 892, DateTimeKind.Local).AddTicks(591),
                            Name = "Health",
                            UpdatedAt = new DateTime(2023, 9, 26, 22, 1, 29, 892, DateTimeKind.Local).AddTicks(593)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2023, 9, 26, 22, 1, 29, 892, DateTimeKind.Local).AddTicks(596),
                            Name = "Everyday",
                            UpdatedAt = new DateTime(2023, 9, 26, 22, 1, 29, 892, DateTimeKind.Local).AddTicks(598)
                        });
                });

            modelBuilder.Entity("MarkMyFinance.Domain.Entities.Expense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.Property<int>("SubCategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("MarkMyFinance.Domain.Entities.Income", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.Property<int>("SubCategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Income");
                });

            modelBuilder.Entity("MarkMyFinance.Domain.Entities.Investment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ExpectedReturn")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SubCategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Investments");
                });

            modelBuilder.Entity("MarkMyFinance.Domain.Entities.SubCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SubCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2023, 9, 26, 22, 1, 29, 892, DateTimeKind.Local).AddTicks(650),
                            Name = "UNKNOWN",
                            UpdatedAt = new DateTime(2023, 9, 26, 22, 1, 29, 892, DateTimeKind.Local).AddTicks(653)
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2023, 9, 26, 22, 1, 29, 892, DateTimeKind.Local).AddTicks(657),
                            Name = "Wages",
                            UpdatedAt = new DateTime(2023, 9, 26, 22, 1, 29, 892, DateTimeKind.Local).AddTicks(659)
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2023, 9, 26, 22, 1, 29, 892, DateTimeKind.Local).AddTicks(662),
                            Name = "Other",
                            UpdatedAt = new DateTime(2023, 9, 26, 22, 1, 29, 892, DateTimeKind.Local).AddTicks(664)
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2023, 9, 26, 22, 1, 29, 892, DateTimeKind.Local).AddTicks(666),
                            Name = "Rent",
                            UpdatedAt = new DateTime(2023, 9, 26, 22, 1, 29, 892, DateTimeKind.Local).AddTicks(668)
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 6,
                            CreatedAt = new DateTime(2023, 9, 26, 22, 1, 29, 892, DateTimeKind.Local).AddTicks(670),
                            Name = "Electricity",
                            UpdatedAt = new DateTime(2023, 9, 26, 22, 1, 29, 892, DateTimeKind.Local).AddTicks(672)
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 6,
                            CreatedAt = new DateTime(2023, 9, 26, 22, 1, 29, 892, DateTimeKind.Local).AddTicks(675),
                            Name = "Gas",
                            UpdatedAt = new DateTime(2023, 9, 26, 22, 1, 29, 892, DateTimeKind.Local).AddTicks(677)
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 6,
                            CreatedAt = new DateTime(2023, 9, 26, 22, 1, 29, 892, DateTimeKind.Local).AddTicks(679),
                            Name = "Water",
                            UpdatedAt = new DateTime(2023, 9, 26, 22, 1, 29, 892, DateTimeKind.Local).AddTicks(681)
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 6,
                            CreatedAt = new DateTime(2023, 9, 26, 22, 1, 29, 892, DateTimeKind.Local).AddTicks(683),
                            Name = "Internet",
                            UpdatedAt = new DateTime(2023, 9, 26, 22, 1, 29, 892, DateTimeKind.Local).AddTicks(685)
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 9,
                            CreatedAt = new DateTime(2023, 9, 26, 22, 1, 29, 892, DateTimeKind.Local).AddTicks(688),
                            Name = "Food",
                            UpdatedAt = new DateTime(2023, 9, 26, 22, 1, 29, 892, DateTimeKind.Local).AddTicks(689)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
